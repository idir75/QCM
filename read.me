1) What are the four principles of Object Oriented Languages like Java?

2) Is Java a pure object oriented language?

3) How will you write an immutable class?

4) What is the difference between Comparable and Comparator interfaces in Java?

5) What is hashcode and equals contract?

6) What is the difference between == and equals method?

7) What are wrapper classes? Why they are declared as final classes?

8) What is the difference between String and StringBuffer classes?

9) What is the way to store the integer value in a string object to an integer variable?

10) What are sorted collections in Java?

11) Why is String class declared as final class?

12) What is JDBC API?

13) What are checked and unchecked exceptions?

14) What is final, finally and finalize?

15) What is weakhashmap?

16) What is the purpose of reflection API?

17) What is serialVersionUID?

18) What is bucketing in Java?

19) How does Java manages the threads?

20) What are memory leaks and how to detect/avoid them?

21) What is the order of execution of blocks in a Java program?

22) What are the exception related rules in overloading and overriding?

23) What are the different ways of creating a thread?

24) What is inter thread communication?

25) What are instance and class level locks? What is synchronization?

26) What is the difference between IS-A and HAS-A relationship?

27) What is cloning and CloneNotSupported Exception?

28) What is the difference between JAR, WAR and EAR files?

29) What are the coding standards for naming variables, constants, methods and classes?

30) What is a literal and what is special about String literals?

31) What is flyweight design pattern?

32) How will you create a Singleton class? Is it thread safe?

33) What is the difference between throw and throws clause?

34) Can one access the private members of class using reflection API?

35) What is the purpose of instanceof operator?

36) Under what circumstances, the finally block in a program may not run?

37) What is the difference between private, protected, default and public access specifiers?

38) What are this and super keywords?

39) What are transient and volatile keywords?

40) How many package statements can a program have?

41) Are all the classes specified in import statement actually imported?

42) Can an inheritance relationship exist between two interfaces?

43) What is Unicode?

44) What are annotations in Java?

45) What are the various forms of polymorphism?

46) What is the meaning of various keywords specified in creating the main method?

47) What is the purpose of ^ operator?

48) What is the difference between pass by value and pass by reference?

49) What are the various types of inner classes?

50) What are the various memory areas in JVM and what kind of information is stored in each of them?
